# Generated by Django 2.1.7 on 2020-05-17 20:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalRequestsOffers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(default='')),
                ('suggested_money_count', models.FloatField(default=1)),
                ('suggested_currency', models.CharField(default='Гривня', max_length=10)),
                ('offer_type', models.CharField(default='Хотів би отримати', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='ChainExchangeProposalsAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept_exchange_conditions', models.BooleanField(default=True)),
                ('answer_message', models.TextField(default='')),
                ('answer_time', models.DateTimeField(auto_now_add=True)),
                ('back_deadline_answer', models.DateTimeField(default=None)),
                ('additional_money_offers', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.AdditionalRequestsOffers')),
            ],
        ),
        migrations.CreateModel(
            name='Complains',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_type', models.CharField(default='Поганий контент', max_length=30)),
                ('complain_text', models.TextField(default='')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['topic_type'],
            },
        ),
        migrations.CreateModel(
            name='ComplainsAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(default='')),
                ('sanction', models.CharField(default='Без санкцій', max_length=30)),
                ('approve_complain', models.BooleanField(default=False)),
                ('sanction_deadline', models.DateTimeField(default=None)),
                ('answer_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DesiredItemsQueries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_description_text', models.TextField(default='')),
                ('proposal_item_type', models.CharField(default='Товари', max_length=15)),
                ('query_creation_time', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('visible_for_others', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Donations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donation_time', models.DateTimeField(auto_now_add=True)),
                ('donation_message', models.TextField(default='')),
                ('donation_value', models.FloatField(default=1)),
                ('donation_currency', models.CharField(default='Гривня', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteProposals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_to_favorite_time', models.DateTimeField(auto_now_add=True)),
                ('visible_for_others', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['user_id'],
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.FileField(default=None, upload_to='documents/%Y/%m/%d')),
                ('time_uploaded', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['proposal_id', 'time_uploaded'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField(blank=True, default=None, null=True)),
                ('long', models.FloatField(blank=True, default=None, null=True)),
                ('str_description', models.CharField(default='', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='PossibleChainExchangeProposals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain_exchange_id', models.IntegerField()),
                ('proposal_message', models.TextField(default='')),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('reject_proposal_at_all', models.DateTimeField(default=None)),
                ('exchange_approve', models.DateTimeField(default=None)),
                ('additional_money_offers', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.AdditionalRequestsOffers')),
            ],
        ),
        migrations.CreateModel(
            name='PossibleItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on_rent_time_unit_measure', models.CharField(default='', max_length=10)),
                ('on_rent_time_unit_count', models.IntegerField(default=0)),
                ('proposal_item_count', models.IntegerField(default=1)),
                ('waited_for_deal', models.BooleanField(default=False)),
                ('accepted_for_deal', models.BooleanField(default=False)),
                ('object_id', models.PositiveIntegerField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalItemsRequestsAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept_request', models.BooleanField(default=True)),
                ('answer_message', models.TextField(default='')),
                ('answer_time', models.DateTimeField(auto_now_add=True)),
                ('back_answer_deadline', models.DateTimeField(default=None)),
                ('confirm_requested_object_give_action', models.DateTimeField(default=None)),
                ('additional_money_offers', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.AdditionalRequestsOffers')),
            ],
        ),
        migrations.CreateModel(
            name='Proposals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=130)),
                ('description', models.TextField(default='')),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('proposal_type', models.CharField(default='Продаж', max_length=8)),
                ('proposal_item_type', models.CharField(default='Товари', max_length=8)),
                ('proposal_item_state', models.CharField(blank=True, max_length=15, null=True)),
                ('available_items', models.IntegerField(blank=True, default=None, null=True)),
                ('total_items', models.IntegerField(blank=True, default=None, null=True)),
                ('set_visible_for_all', models.BooleanField(default=True)),
                ('is_blocked_by_admin', models.BooleanField(default=False)),
                ('rent_time_unit_measure', models.CharField(blank=True, max_length=10, null=True)),
                ('item_price_value', models.FloatField(blank=True, null=True)),
                ('item_price_currency', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'ordering': ['creator_id', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ProposalsCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=128, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'ordering': ['category', 'subcategory'],
            },
        ),
        migrations.CreateModel(
            name='ProposalsItemsRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(default='Продаж', max_length=10)),
                ('request_message', models.TextField(default='')),
                ('request_time', models.DateTimeField(auto_now_add=True)),
                ('request_deadline_for_answer', models.DateTimeField(default=None)),
                ('total_accept_approve_answer', models.DateTimeField(default=None)),
                ('requested_object_received', models.DateTimeField(default=None)),
                ('additional_money_offers', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.AdditionalRequestsOffers')),
            ],
            options={
                'ordering': ['request_user_id'],
            },
        ),
        migrations.CreateModel(
            name='ProposalsTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=256, null=True, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField(default='')),
                ('review_mark', models.CharField(default='добре', max_length=10)),
                ('review_time', models.DateTimeField(auto_now_add=True)),
                ('reviewed_chain_proposal', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.PossibleChainExchangeProposals')),
                ('reviewed_simple_proposal', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Proposals')),
            ],
        ),
        migrations.CreateModel(
            name='UserMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField(default='')),
                ('time_send', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('password_hash', models.CharField(default='', max_length=64)),
                ('email', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('self_description', models.TextField(default='Шукаю можливості обміну, продажу, оренди товарів і послуг')),
                ('role', models.CharField(default='Звичайний', max_length=15)),
                ('is_blocked_by_admin', models.BooleanField(default=False)),
                ('time_entered', models.DateTimeField(auto_now_add=True)),
                ('location', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Location')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='usermessages',
            name='user_receiver_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='user_receiver_id', to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='usermessages',
            name='user_sender_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='user_sender_id', to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='reviews',
            name='reviewer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='proposalsitemsrequests',
            name='request_user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AlterUniqueTogether(
            name='proposalscategories',
            unique_together={('category', 'subcategory')},
        ),
        migrations.AddField(
            model_name='proposals',
            name='category',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.ProposalsCategories'),
        ),
        migrations.AddField(
            model_name='proposals',
            name='creator_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='proposals',
            name='location',
            field=models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Location'),
        ),
        migrations.AddField(
            model_name='proposals',
            name='search_tags',
            field=models.ManyToManyField(blank=True, related_name='proposals_tags', to='buy_rent_barter_app.ProposalsTags'),
        ),
        migrations.AddField(
            model_name='proposals',
            name='wished_items',
            field=models.ManyToManyField(blank=True, related_name='desired_items', to='buy_rent_barter_app.DesiredItemsQueries'),
        ),
        migrations.AddField(
            model_name='proposalitemsrequestsanswers',
            name='request_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.ProposalsItemsRequests'),
        ),
        migrations.AddField(
            model_name='possibleitems',
            name='proposal_item_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Proposals'),
        ),
        migrations.AddField(
            model_name='possibleitems',
            name='topic_content_type',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='possiblechainexchangeproposals',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='images',
            name='proposal',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Proposals'),
        ),
        migrations.AddField(
            model_name='favoriteproposals',
            name='favorite_proposal_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Proposals'),
        ),
        migrations.AddField(
            model_name='favoriteproposals',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='donations',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='desireditemsqueries',
            name='category',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.ProposalsCategories'),
        ),
        migrations.AddField(
            model_name='desireditemsqueries',
            name='query_creator_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='desireditemsqueries',
            name='query_description_tags',
            field=models.ManyToManyField(blank=True, related_name='desire_item_description_tags', to='buy_rent_barter_app.ProposalsTags'),
        ),
        migrations.AddField(
            model_name='complainsanswers',
            name='arbiter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='complainsanswers',
            name='complain_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Complains'),
        ),
        migrations.AddField(
            model_name='complains',
            name='complain_subject_proposal',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complain_subject_proposal', to='buy_rent_barter_app.Proposals'),
        ),
        migrations.AddField(
            model_name='complains',
            name='complain_subject_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complain_subject_user', to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='complains',
            name='initiator_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complain_initiator_user', to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='chainexchangeproposalsanswers',
            name='chain_exchange_block_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.PossibleChainExchangeProposals'),
        ),
        migrations.AlterUniqueTogether(
            name='proposals',
            unique_together={('title', 'creator_id')},
        ),
        migrations.AlterUniqueTogether(
            name='favoriteproposals',
            unique_together={('favorite_proposal_id', 'user_id')},
        ),
    ]
