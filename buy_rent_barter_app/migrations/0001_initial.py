# Generated by Django 2.1.7 on 2020-04-19 11:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdItemBuyRentExchangeOnFinishingRankings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField()),
                ('review_ranking', models.FloatField(default=0.0)),
                ('review_time', models.DateTimeField(auto_now_add=True)),
                ('request_answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='AdsItemBuyRequestAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept_request', models.BooleanField(default=True)),
                ('answer_message', models.CharField(default='please contact me for further info', max_length=1024)),
                ('answer_time', models.DateTimeField(auto_now_add=True)),
                ('answer_buyer_watched', models.DateTimeField(default=None)),
                ('approve_deadline_for_buyer', models.DateTimeField(default=None)),
                ('approve_by_buyer_accepted_time', models.DateTimeField(default=None)),
                ('cell_approve', models.DateTimeField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='AdsItemExchangeRequestAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept_request', models.BooleanField(default=True)),
                ('answer_message', models.CharField(default='please contact me for further info', max_length=1024)),
                ('answer_time', models.DateTimeField(auto_now_add=True)),
                ('answer_watched', models.DateTimeField(default=None)),
                ('approve_deadline', models.DateTimeField(default=None)),
                ('approve_accepted_time', models.DateTimeField(default=None)),
                ('rent_approve', models.DateTimeField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='AdsItemsRentRequestsAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept_request', models.BooleanField(default=True)),
                ('answer_message', models.TextField(default='please contact me for further info')),
                ('answer_time', models.DateTimeField(auto_now_add=True)),
                ('answer_renter_watched', models.DateTimeField(default=None)),
                ('approve_deadline_for_renter', models.DateTimeField(default=None)),
                ('approve_by_renter_accepted', models.DateTimeField(default=None)),
                ('rent_approve', models.DateTimeField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='Advertisements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_name', models.CharField(max_length=256)),
                ('ad_description_text', models.TextField()),
                ('ad_creation_time', models.DateTimeField(auto_now_add=True)),
                ('ad_type', models.CharField(choices=[('SE', 'SELL'), ('RE', 'RENT'), ('EX', 'EXCHANGE')], default='SE', max_length=2)),
                ('ad_item_type', models.CharField(choices=[('GO', 'GOODS'), ('SE', 'SERVICES')], default='GO', max_length=2)),
                ('ad_item_state', models.CharField(choices=[('NE', 'NEW'), ('US', 'USED')], default='NE', max_length=2)),
                ('ad_location_latitude', models.FloatField(default=None)),
                ('ad_location_longitude', models.FloatField(default=None)),
                ('available_items', models.IntegerField(default=1)),
                ('total_items', models.IntegerField(default=1)),
                ('set_email_notification', models.BooleanField(default=True)),
                ('set_visible_for_all', models.BooleanField(default=True)),
                ('ad_content_hashcode', models.CharField(default='', max_length=77)),
            ],
            options={
                'ordering': ['ad_creator_id', 'ad_name'],
            },
        ),
        migrations.CreateModel(
            name='AdvertisementsItemsExchangeConditions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggested_ad_item_price_value', models.FloatField(default=0.0)),
                ('suggested_ad_item_price_currency', models.CharField(default='UAH', max_length=20)),
                ('exchange_conditions_set_time', models.DateTimeField(auto_now_add=True)),
                ('ad_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Advertisements', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdvertisementsItemsPrices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_item_price_value', models.FloatField(default=0.0)),
                ('ad_item_price_currency', models.CharField(default='UAH', max_length=20)),
                ('price_set_time', models.DateTimeField(auto_now_add=True)),
                ('ad_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Advertisements')),
            ],
        ),
        migrations.CreateModel(
            name='AdvertisementsItemsRentConditions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggested_rent_time_unit_measure', models.CharField(choices=[('M', 'MINUTE'), ('H', 'HOUR'), ('D', 'DAY'), ('M', 'MONTH'), ('Y', 'YEAR')], default='D', max_length=1)),
                ('suggested_ad_item_price_value', models.FloatField(default=1)),
                ('suggested_ad_item_price_currency', models.CharField(default='UAH', max_length=20)),
                ('rent_conditions_set_time', models.DateTimeField(auto_now_add=True)),
                ('ad_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Advertisements')),
            ],
        ),
        migrations.CreateModel(
            name='AdvertisementsTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_tag', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'ordering': ['ad_tag'],
            },
        ),
        migrations.CreateModel(
            name='BuyRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_message', models.CharField(default='some text', max_length=1024)),
                ('requested_ad_item_count', models.IntegerField(default=1)),
                ('request_time', models.DateTimeField(auto_now_add=True)),
                ('request_seller_watched', models.DateTimeField(default=None)),
                ('request_deadline_for_seller_answer', models.DateTimeField(default=None)),
                ('buy_approve', models.DateTimeField(default=None)),
                ('notify_on_email', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['possible_buyer_id', 'request_ad_item_id'],
            },
        ),
        migrations.CreateModel(
            name='ChainExchangeParticipantsAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept_exchange_conditions', models.BooleanField(default=True)),
                ('answer_message', models.TextField(default='please contact me for further info')),
                ('answer_time', models.DateTimeField(auto_now_add=True)),
                ('answer_next_chain_exchanger_watched', models.DateTimeField(default=None)),
                ('answer_deadline_for_next_chain_exchanger', models.DateTimeField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='ChainExchangeWishes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_message', models.TextField(default='please contact me for further info')),
                ('answer_time', models.DateTimeField(auto_now_add=True)),
                ('answer_watched', models.DateTimeField(default=None)),
                ('approve_deadline_for_previous', models.DateTimeField(default=None)),
                ('approve_accepted', models.DateTimeField(default=None)),
                ('chain_exchange_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.ChainExchangeParticipantsAnswers')),
            ],
        ),
        migrations.CreateModel(
            name='ComplainAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arbiter_verdict', models.TextField()),
                ('sanction', models.CharField(choices=[('BA', 'BLOCK ACCOUNT'), ('BSC', 'BLOCK SPECIFIED CONTENT'), ('BADSC', 'BLOCK ACCOUNT AND BLOCK SPECIFIED CONTENT'), ('NS', 'NO SANCTIONS')], default='NS', max_length=5)),
                ('approve_complain', models.BooleanField(default=False)),
                ('sanction_time_available', models.DateTimeField(default=None)),
                ('answer_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Complains',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_type', models.CharField(choices=[('BC', 'BAD CONTENT'), ('SE', 'SELL'), ('RE', 'RENT'), ('EX', 'EXCHANGE'), ('CE', 'CHAIN_EXCHANGE')], default='SE', max_length=2)),
                ('complain_description_text', models.TextField()),
                ('complain_time', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['topic_type'],
            },
        ),
        migrations.CreateModel(
            name='DesiredAdsItemsQueries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_description_text', models.TextField(default='Would like this')),
                ('ad_type', models.CharField(choices=[('SE', 'SELL'), ('RE', 'RENT'), ('BA', 'BARTER'), ('NM', 'NO MATTER')], default='NM', max_length=2)),
                ('ad_item_type', models.CharField(choices=[('GO', 'GOODS'), ('SE', 'SERVICE'), ('NM', 'NO MATTER')], default='NM', max_length=1)),
                ('ad_item_state', models.CharField(choices=[('N', 'NEW'), ('U', 'USED'), ('NM', 'NO_MATTER')], default='NM', max_length=2)),
                ('notify_on_email', models.BooleanField(default=True)),
                ('query_creation_time', models.DateTimeField(auto_now_add=True)),
                ('visible_for_others', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='DesiredItemExistenceNotifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_time', models.DateTimeField(auto_now_add=True)),
                ('query_for_desired_ads_item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.DesiredAdsItemsQueries')),
                ('suggested_item_ad_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Advertisements')),
            ],
            options={
                'ordering': ['query_for_desired_ads_item_id'],
            },
        ),
        migrations.CreateModel(
            name='DesiredItemsDescriptionTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desired_item_description_tag', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'ordering': ['desired_item_description_tag'],
            },
        ),
        migrations.CreateModel(
            name='Donations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donation_time', models.DateTimeField(auto_now_add=True)),
                ('donation_message', models.TextField()),
                ('donation_value', models.FloatField(default=1)),
                ('donation_currency', models.CharField(default='UAH', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_message', models.TextField(default='some text')),
                ('request_time', models.DateTimeField(auto_now_add=True)),
                ('request_watched', models.DateTimeField(default=None)),
                ('request_deadline_to_answer', models.DateTimeField(default=None)),
                ('exchange_approve', models.DateTimeField(default=None)),
                ('notify_on_email', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRequestsPriceOffers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange_type', models.CharField(choices=[('SE', 'SIMPLE EXCHANGE'), ('CE', 'CHAIN EXCHANGE')], default='WG', max_length=2)),
                ('suggested_price', models.FloatField(default=1)),
                ('suggested_currency', models.CharField(default='UAH', max_length=10)),
                ('offer_type', models.CharField(choices=[('WG', 'WANT GIVE'), ('WR', 'WANT RECEIVE')], default='WG', max_length=1)),
                ('offer_time', models.DateTimeField(auto_now_add=True)),
                ('offer_watched', models.DateTimeField(default=None)),
                ('deadline_for_offer_answer', models.DateTimeField(default=None)),
                ('rent_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteAdvertisements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_to_favorite_time', models.DateTimeField(auto_now_add=True)),
                ('description_text', models.CharField(default='', max_length=512)),
                ('visible_for_others', models.BooleanField(default=True)),
                ('favorite_ad_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Advertisements')),
            ],
            options={
                'ordering': ['user_id'],
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_path', models.CharField(max_length=256)),
                ('img_time_uploaded', models.DateTimeField(auto_now_add=True)),
                ('img_hashcode', models.CharField(default='', max_length=77)),
            ],
            options={
                'ordering': ['uploader_id', 'img_time_uploaded'],
            },
        ),
        migrations.CreateModel(
            name='PossibleChainExchange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain_id', models.IntegerField()),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('previous_wish_items_chain_hashcode', models.CharField(default='', max_length=77)),
                ('exchange_approve', models.DateTimeField(default=None)),
                ('notify_on_email', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PossibleExchangeItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_item_count', models.IntegerField(default=1)),
                ('ad_item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Advertisements')),
            ],
        ),
        migrations.CreateModel(
            name='PossibleRentItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggested_rent_time_unit_measure', models.CharField(choices=[('M', 'MINUTE'), ('H', 'HOUR'), ('D', 'DAY'), ('M', 'MONTH'), ('Y', 'YEAR')], default='D', max_length=1)),
                ('suggested_rent_time_unit_count', models.IntegerField(default=1)),
                ('ad_item_count', models.IntegerField(default=1)),
                ('ad_item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Advertisements')),
            ],
        ),
        migrations.CreateModel(
            name='RentRequestPriceOffers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggested_price', models.FloatField(default=1)),
                ('suggested_currency', models.CharField(default='UAH', max_length=10)),
                ('offer_type', models.CharField(choices=[('WG', 'WANT GIVE'), ('WR', 'WANT RECEIVE')], default='WG', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='RentRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_message', models.TextField()),
                ('request_time', models.DateTimeField(auto_now_add=True)),
                ('request_watched_time', models.DateTimeField(default=None)),
                ('request_deadline_for_answer', models.DateTimeField(default=None)),
                ('rent_approve', models.DateTimeField(default=None)),
                ('notify_on_email', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField()),
                ('time_send', models.DateTimeField(auto_now_add=True)),
                ('message_edited', models.BooleanField(default=False)),
                ('topic_type', models.CharField(choices=[('CO', 'Complain'), ('SE', 'SELL'), ('RE', 'RENT'), ('BA', 'BARTER'), ('CE', 'CHAIN_EXCHANGE')], default='SE', max_length=2)),
                ('description_images', models.ManyToManyField(blank=True, related_name='description_images', to='buy_rent_barter_app.Images')),
            ],
            options={
                'ordering': ['topic_type', 'topic_id', 'time_send'],
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=64, unique=True)),
                ('user_password_hash', models.CharField(default='', max_length=77)),
                ('user_email', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('user_current_location_lat', models.FloatField(default=None)),
                ('user_current_location_long', models.FloatField(default=None)),
                ('user_last_time_visited', models.DateTimeField(auto_now_add=True)),
                ('user_vip_status', models.BooleanField(default=False)),
                ('user_admin_status', models.BooleanField(default=False)),
                ('user_show_user_profile_for_all', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['user_name'],
            },
        ),
        migrations.CreateModel(
            name='UsersAdvertisementsLocationsDistances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_in_km', models.FloatField(default=0.0)),
                ('ad_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Advertisements')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users')),
            ],
            options={
                'ordering': ['user_id'],
            },
        ),
        migrations.AddField(
            model_name='usermessages',
            name='message_sender_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='usermessages',
            name='topic_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='rentrequests',
            name='possible_renter_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='rentrequests',
            name='requested_ad_items',
            field=models.ManyToManyField(related_name='requested_rent_items', to='buy_rent_barter_app.PossibleRentItems'),
        ),
        migrations.AddField(
            model_name='rentrequests',
            name='suggested_ad_items',
            field=models.ManyToManyField(blank=True, related_name='suggested_rent_items', to='buy_rent_barter_app.PossibleRentItems'),
        ),
        migrations.AddField(
            model_name='rentrequestpriceoffers',
            name='rent_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.RentRequests', unique=True),
        ),
        migrations.AddField(
            model_name='possiblechainexchange',
            name='chain_exchange_proposal_items',
            field=models.ManyToManyField(blank=True, related_name='ads_items_for_chain_exchange', to='buy_rent_barter_app.PossibleExchangeItems'),
        ),
        migrations.AddField(
            model_name='possiblechainexchange',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='images',
            name='uploader_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='favoriteadvertisements',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='exchangerequests',
            name='exchange_initiator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='exchangerequests',
            name='requested_ad_items',
            field=models.ManyToManyField(blank=True, related_name='desire_items_for_exchange', to='buy_rent_barter_app.PossibleExchangeItems'),
        ),
        migrations.AddField(
            model_name='exchangerequests',
            name='suggested_ad_items',
            field=models.ManyToManyField(blank=True, related_name='suggested_items_for_exchange', to='buy_rent_barter_app.PossibleExchangeItems'),
        ),
        migrations.AddField(
            model_name='donations',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='desiredadsitemsqueries',
            name='query_creator_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='desiredadsitemsqueries',
            name='query_description_tags',
            field=models.ManyToManyField(blank=True, related_name='desire_item_description_tags', to='buy_rent_barter_app.DesiredItemsDescriptionTags'),
        ),
        migrations.AddField(
            model_name='complains',
            name='complain_initiator_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complain_initiator_user', to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='complains',
            name='complain_subject_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complain_subject_user', to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='complains',
            name='topic_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='complainanswers',
            name='arbiter_to_resolve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='complainanswers',
            name='complain_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Complains'),
        ),
        migrations.AddField(
            model_name='chainexchangewishes',
            name='wanted_items_for_chain_exchange',
            field=models.ManyToManyField(blank=True, related_name='wanted_items_for_chain_exchange', to='buy_rent_barter_app.PossibleExchangeItems'),
        ),
        migrations.AddField(
            model_name='chainexchangeparticipantsanswers',
            name='chain_exchange_block_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.PossibleChainExchange'),
        ),
        migrations.AddField(
            model_name='buyrequests',
            name='possible_buyer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='buyrequests',
            name='request_ad_item_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Advertisements'),
        ),
        migrations.AddField(
            model_name='advertisementsitemsrentconditions',
            name='wished_ad_items',
            field=models.ManyToManyField(blank=True, related_name='desired_items', to='buy_rent_barter_app.DesiredAdsItemsQueries'),
        ),
        migrations.AddField(
            model_name='advertisementsitemsexchangeconditions',
            name='wished_ad_items',
            field=models.ManyToManyField(blank=True, related_name='wished_items_for_exchange', to='buy_rent_barter_app.DesiredAdsItemsQueries'),
        ),
        migrations.AddField(
            model_name='advertisements',
            name='ad_creator_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AddField(
            model_name='advertisements',
            name='ad_description_images',
            field=models.ManyToManyField(blank=True, related_name='ad_description_images', to='buy_rent_barter_app.Images'),
        ),
        migrations.AddField(
            model_name='advertisements',
            name='ad_search_tags',
            field=models.ManyToManyField(blank=True, related_name='advertisements_tags', to='buy_rent_barter_app.AdvertisementsTags'),
        ),
        migrations.AddField(
            model_name='adsitemsrentrequestsanswers',
            name='rent_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.RentRequests'),
        ),
        migrations.AddField(
            model_name='adsitemexchangerequestanswer',
            name='rent_request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.ExchangeRequests'),
        ),
        migrations.AddField(
            model_name='adsitembuyrequestanswer',
            name='buy_request_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.BuyRequests'),
        ),
        migrations.AddField(
            model_name='aditembuyrentexchangeonfinishingrankings',
            name='review_description_images',
            field=models.ManyToManyField(blank=True, related_name='review_images', to='buy_rent_barter_app.Images'),
        ),
        migrations.AddField(
            model_name='aditembuyrentexchangeonfinishingrankings',
            name='reviewer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='buy_rent_barter_app.Users'),
        ),
        migrations.AlterUniqueTogether(
            name='usersadvertisementslocationsdistances',
            unique_together={('ad_id', 'user_id')},
        ),
        migrations.AlterUniqueTogether(
            name='possiblerentitems',
            unique_together={('suggested_rent_time_unit_measure', 'suggested_rent_time_unit_count', 'ad_item_count', 'ad_item_id')},
        ),
        migrations.AlterUniqueTogether(
            name='possibleexchangeitems',
            unique_together={('ad_item_count', 'ad_item_id')},
        ),
        migrations.AlterUniqueTogether(
            name='favoriteadvertisements',
            unique_together={('favorite_ad_id', 'user_id')},
        ),
    ]
